<script type="text/javascript">
  var config = {
    type: Phaser.AUTO,
    width: 900,
    height: 600,
    physics: {
      default: 'arcade',
      arcade: {
        gravity: { y: 300 },
        debug: false
      }
    },
    scene: {
      preload: preload,
      create: create,
      update: update
    }
  };

  var game = new Phaser.Game(config);
  var player1;
  var player2;
  var p1health = 100;
  var p2health = 100;



  function preload ()
  {
    this.load.image('stage', '<%= image_path('chikara-temple.jpg')%>');
    this.load.atlas('p1lp', '<%= image_path('p1lp.png')%>', '<%= asset_path('p1lp.json')%>');
    this.load.atlas('p1mp', '<%= image_path('p1mp.png')%>', '<%= asset_path('p1mp.json')%>');
    this.load.atlas('p1hp', '<%= image_path('p1hp.png')%>', '<%= asset_path('p1hp.json')%>');
    this.load.atlas('p1lk', '<%= image_path('p1lk.png')%>', '<%= asset_path('p1lk.json')%>');
    this.load.atlas('p1mk', '<%= image_path('p1mk.png')%>', '<%= asset_path('p1mk.json')%>');
    this.load.atlas('p1hk', '<%= image_path('p1hk.png')%>', '<%= asset_path('p1hk.json')%>');
    this.load.atlas('p2lp', '<%= image_path('p2lp.png')%>', '<%= asset_path('p2lp.json')%>');
    this.load.atlas('p2mp', '<%= image_path('p2mp.png')%>', '<%= asset_path('p2mp.json')%>');
    this.load.atlas('p2hp', '<%= image_path('p2hp.png')%>', '<%= asset_path('p2hp.json')%>');
    this.load.atlas('p2lk', '<%= image_path('p2lk.png')%>', '<%= asset_path('p2lk.json')%>');
    this.load.atlas('p2mk', '<%= image_path('p2mk.png')%>', '<%= asset_path('p2mk.json')%>');
    this.load.atlas('p2hk', '<%= image_path('p2hk.png')%>', '<%= asset_path('p2hk.json')%>');
  }


  function create ()
  {

    this.add.image(450,300, 'stage').setScale(.25, .2);
    player1 = this.physics.add.sprite(395,455, 'p1hp', 'p1hp/01.png').setScale(.3);
    player2 = this.physics.add.sprite(500,455, 'p2hp', 'p2hp/01.png').setScale(.3);


    player1.body.setCollideWorldBounds(true);
    player2.body.setCollideWorldBounds(true);


    this.anims.create(
    {
      key: 'p1lp',
      frames: this.anims.generateFrameNames('p1lp', {
        prefix: 'p1lp/',
        suffix: '.png',
        start: 1,
        end: 5,
        zeroPad: 2
      }),
      frameRate: 20,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p1mp',
      frames: this.anims.generateFrameNames('p1mp', {
        prefix: 'p1mp/',
        suffix: '.png',
        start: 1,
        end: 5,
        zeroPad: 2
      }),
      frameRate: 20,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p1hp',
      frames: this.anims.generateFrameNames('p1hp', {
        prefix: 'p1hp/',
        suffix: '.png',
        start: 1,
        end: 10,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p1mk',
      frames: this.anims.generateFrameNames('p1mk', {
        prefix: 'p1mk/',
        suffix: '.png',
        start: 1,
        end: 9,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p1hk',
      frames: this.anims.generateFrameNames('p1hk', {
        prefix: 'p1hk/',
        suffix: '.png',
        start: 1,
        end: 6,
        zeroPad: 2
      }),
      frameRate: 14,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p2lp',
      frames: this.anims.generateFrameNames('p2lp', {
        prefix: 'p2lp/',
        suffix: '.png',
        start: 1,
        end: 5,
        zeroPad: 2
      }),
      frameRate: 20,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p2mp',
      frames: this.anims.generateFrameNames('p2mp', {
        prefix: 'p2mp/',
        suffix: '.png',
        start: 1,
        end: 5,
        zeroPad: 2
      }),
      frameRate: 20,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p2hp',
      frames: this.anims.generateFrameNames('p2hp', {
        prefix: 'p2hp/',
        suffix: '.png',
        start: 1,
        end: 10,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p2mk',
      frames: this.anims.generateFrameNames('p2mk', {
        prefix: 'p2mk/',
        suffix: '.png',
        start: 1,
        end: 9,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p2hk',
      frames: this.anims.generateFrameNames('p2hk', {
        prefix: 'p2hk/',
        suffix: '.png',
        start: 1,
        end: 6,
        zeroPad: 2
      }),
      frameRate: 14,
      repeat: 0
    });



    player1.on('animationcomplete', p2damage)
    player2.on('animationcomplete', p1damage)
  }


  function update ()
  {

    keys = this.input.keyboard.addKeys('A, S, D, Z, X, C, I, O, P, J, K, L');

    if (player1.anims.isPlaying) {
    }else if(Phaser.Input.Keyboard.JustDown(keys.A)) {
      player1.anims.play('p1lp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.S)){
      player1.anims.play('p1mp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.D)){
      player1.anims.play('p1hp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.X)){
      player1.anims.play('p1mk');
    }else if(Phaser.Input.Keyboard.JustDown(keys.C)){
      player1.anims.play('p1hk');
    }

    if (player2.anims.isPlaying) {
    }else if(Phaser.Input.Keyboard.JustDown(keys.I)) {
      player2.anims.play('p2lp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.O)){
      player2.anims.play('p2mp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.P)){
      player2.anims.play('p2hp');
    }else if(Phaser.Input.Keyboard.JustDown(keys.K)){
      player2.anims.play('p2mk');
    }else if(Phaser.Input.Keyboard.JustDown(keys.L)){
      player2.anims.play('p2hk');
    }

  }

  function p1damage(e) {
    p1health -= 2;
    console.log(p1health);

    if (p1health < 50 && p1health >= 25) {
      player1.tint = 0xff6666;
    }else if(p1health < 25 && p1health >= 15) {
      player1.tint = 0xff3333;
    }else if (p1health < 15 && p1health > 0){
      player1.tint = 0xff0000;
    }else if(p1health <= 0){
      alert('Player 2 WINS!')
    }
  }
  function p2damage() {
    p2health -= 2;
    console.log(p2health);
    if (p2health < 50 && p2health >= 25) {
      player2.tint = 0xff6666;
    }else if(p2health < 25 && p2health >= 15) {
      player2.tint = 0xff3333;
    }else if (p2health < 15 && p2health > 0){
      player2.tint = 0xff0000;
    }else if(p2health <= 0){
      alert('Player 1 WINS!');
    }
  }


</script>
