<div id="arena">
</div>
<script type="text/javascript">
  var config = {
    type: Phaser.AUTO,
    width: 900,
    height: 600,
    physics: {
      default: 'arcade',
      arcade: {
        gravity: { y: 300 },
        debug: true
      }
    },
    scene: {
      preload: preload,
      create: create,
      update: update
    }
  };

  var game = new Phaser.Game(config);
  var player1;
  var player2;
  var p1health = 100;
  var p2health = 100;

  var winner;



  function preload ()
  {
    this.load.image('stage', '<%= image_path('chikara-temple.jpg')%>');
    this.load.atlas('p1punch', '<%= image_path('p1punch.png')%>', '<%= asset_path('p1punch.json')%>');
    this.load.atlas('p1kick', '<%= image_path('p1kick.png')%>', '<%= asset_path('p1kick.json')%>');
    this.load.atlas('p1front', '<%= image_path('p1front.png')%>', '<%= asset_path('p1front.json')%>');
    this.load.atlas('p1back', '<%= image_path('p1back.png')%>', '<%= asset_path('p1back.json')%>');
    this.load.atlas('p2punch', '<%= image_path('p2punch.png')%>', '<%= asset_path('p2punch.json')%>');
    this.load.atlas('p2kick', '<%= image_path('p2kick.png')%>', '<%= asset_path('p2kick.json')%>');
    this.load.atlas('p2front', '<%= image_path('p2front.png')%>', '<%= asset_path('p2front.json')%>');
    this.load.atlas('p2back', '<%= image_path('p2back.png')%>', '<%= asset_path('p2back.json')%>');
  }


  function create ()
  {


    this.add.image(450,300, 'stage').setScale(.25, .2);
    player1 = this.physics.add.sprite(390,455, 'p1punch', 'p1punch/01.png').setScale(.3);
    player2 = this.physics.add.sprite(500,455, 'p2punch', 'p2punch/01.png').setScale(.3);


    player1.body.setVelocity(0, 0).setCollideWorldBounds(true);
    player2.body.setVelocity(0, 0).setCollideWorldBounds(true);


    this.anims.create(
    {
      key: 'p1punch',
      frames: this.anims.generateFrameNames('p1punch', {
        prefix: 'p1punch/',
        suffix: '.png',
        start: 1,
        end: 10,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p1kick',
      frames: this.anims.generateFrameNames('p1kick', {
        prefix: 'p1kick/',
        suffix: '.png',
        start: 1,
        end: 9,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });


    this.anims.create(
    {
      key: 'p2punch',
      frames: this.anims.generateFrameNames('p2punch', {
        prefix: 'p2punch/',
        suffix: '.png',
        start: 1,
        end: 10,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });

    this.anims.create(
    {
      key: 'p2kick',
      frames: this.anims.generateFrameNames('p2kick', {
        prefix: 'p2kick/',
        suffix: '.png',
        start: 1,
        end: 9,
        zeroPad: 2
      }),
      frameRate: 30,
      repeat: 0
    });


    player1.on('animationcomplete', p2damage)
    player2.on('animationcomplete', p1damage)
  }


  function update ()
  {

    keys = this.input.keyboard.addKeys('A, S, D, Z, X, C');


    if (player1.anims.isPlaying) {
    }else if(Phaser.Input.Keyboard.JustDown(keys.D)) {
      player1.anims.play('p1punch');
    }else if(Phaser.Input.Keyboard.JustDown(keys.C)){
      player1.anims.play('p1kick');
    }

    if (player2.anims.isPlaying){
    }else if(Phaser.Input.Keyboard.JustDown(keys.Z)){
      player2.anims.play('p2punch');
    }else if(Phaser.Input.Keyboard.JustDown(keys.X)){
      player2.anims.play('p2kick');
    }

  }

  function p1damage(e) {
    p1health -= 2;
    console.log(p1health);

    if (p1health < 50 && p1health >= 25) {
      player1.tint = 0xff6666;
    }else if(p1health < 25 && p1health >= 15) {
      player1.tint = 0xff3333;
    }else if (p1health < 15){
      player1.tint = 0xff0000;
    }
  }
  function p2damage() {
    p2health -= 2;
    console.log(p2health);
    if (p2health < 50 && p2health >= 25) {
      player2.tint = 0xff6666;
    }else if(p2health < 25 && p2health >= 15) {
      player2.tint = 0xff3333;
    }else if (p2health < 15){
      player2.tint = 0xff0000;
    }
  }




</script>
